plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id 'net.neoforged.gradle.userdev' version '7.0.95'
}

if (project.file('../gradletools.gradle').exists()) {
    apply from: '../gradletools.gradle'
} else {
    apply from: 'https://raw.githubusercontent.com/McJtyMods/MultiWorkspace/1.20_tech/gradletools.gradle'
}

group = "com.github.mcjty"
archivesBaseName = "hologui"
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repos()
at()
runs()
jars()

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

dependencies {
    mc()
    jei()
    top()
    mcjtylib()
}

cfdeps(['the-one-probe'], ['mcjtylib'], [])
modrinth(['the-one-probe'], ['mcjtylib'], [])

task apiJar(type: Jar) {
    classifier = "api"
    from(sourceSets.main.output) {
        include "mcjty/hologui/api/**"
    }
}

artifacts {
    archives apiJar
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact apiJar
        }
    }

    repositories {
        if (project.hasProperty('mavendir')) {
            maven { url mavendir }
        } else {
            mavenLocal()
        }
    }
}


task("uploadJars", dependsOn: "reobf") {
    description = "uploads JARs"
    if (System.getenv("local_maven") != null) {
        apply plugin: 'maven'
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.getenv("local_maven"))
                    pom {
                        groupId = project.group
                        version = project.version
                        artifactId = project.archivesBaseName
                        project {
                            name project.archivesBaseName
                            packaging 'jar'
                            description 'HoloGui'
                            scm {
                                url 'https://github.com/McJtyMods/HoloGui'
                                connection 'scm:git:git@github.com:McJtyMods/HoloGui.git'
                                developerConnection 'scm:git:git@github.com:McJtyMods/HoloGui.git'
                            }
                            issueManagement {
                                system 'github'
                                url 'https://github.com/McJtyMods/HoloGui/issues'
                            }
                            licenses {
                                license {
                                    name 'MIT'
                                    distribution 'repo'
                                }
                            }
                            developers {
                                developer {
                                    id 'McJty'
                                    name 'McJty'
                                    roles { role 'developer' }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
